//
// Created by Diaz, Diego on 14.9.2022.
//
#include<iostream>
#include <vector>
#include "bwt_io.h"

int main(int argc, char** argv) {

    if (argc != 3) {
        std::cout << "usage: ./reverse_bwt file.rlbwt n_seqs\n\n"
                     "file:   the BCR BWT file generated by grlBWT\n"
                     "bits: maximum number of bits that the runs can use" << std::endl;
        exit(0);
    }

    errno = 0;
    char *endptr;
    long bits = strtol(argv[2], &endptr, 10);
    assert(bits<64);
    size_t max_length= (1UL<<size_t(bits))-1UL;
    std::cout<<"Maximum size allowed for the reads "<<max_length<<" "<<bits<<std::endl;

    std::string input_file = std::string(argv[1]);

    bwt_buff_reader bwt_reader(input_file);
    size_t sym=0, len=0;

    std::cout<<"Reading the input BWT"<<std::endl;
    size_t tot_runs=0;
    for(size_t i=0;i<bwt_reader.size();i++){
        bwt_reader.read_run(i, sym, len);
        while(len>max_length){
            len-=max_length;
            tot_runs++;
        }
        assert(len<=max_length);
        tot_runs++;
    }

    std::cout<<"Number of runs before: "<<bwt_reader.size()<<std::endl;
    std::cout<<"Number of runs now: "<<tot_runs<<std::endl;
    std::cout<<"Increase ratio "<<double(tot_runs)/double(bwt_reader.size())<<std::endl;
}